# docker stack deploy -c edge.yml --prune edge
version: "3.7"
services:
  traefik:
    image: traefik:v2.2
    ports:
      - target: 80
        published: 80
        protocol: tcp
        # mode: host
      - target: 443
        published: 443
        protocol: tcp
        # mode: host
      - target: 8080
        published: 44444
        protocol: tcp
        # mode: host
    command:
      - --global.checknewversion=false
      - --global.sendanonymoususage=false

      - --accesslog
      - --accesslog.fields.headers.defaultmode=keep
      - --api
      - --api.insecure
      - --ping

      - --certificatesResolvers.default.acme.tlsChallenge=true
      - --certificatesresolvers.default.acme.email=support@trajano.net
      - --certificatesresolvers.default.acme.storage=/etc/traefik/acme/default.json

      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --entrypoints.http.http.redirections.entrypoint.permanent=true

      - --entrypoints.https.address=:443
      - --entrypoints.https.http.middlewares=security-headers@file,compress-all@file
      - --entrypoints.https.http.tls.certresolver=default
      - --entrypoints.https.http.tls.options=default

      - --providers.docker.endpoint=tcp://daemon:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      - "--providers.docker.constraints=!Label(`intranet`, `true`)"
      - '--providers.docker.defaultrule=Host(`trajano.net`) && PathPrefix(`/{{ .Name | trimPrefix (index .Labels "com.docker.stack.namespace") | trimPrefix "_" | trimPrefix "-" }}`)'

      - --providers.file.filename=/traefik-conf.toml

      - --tracing.zipkin.httpEndpoint=http://zipkin:9411/api/v2/spans

    healthcheck:
      test: traefik healthcheck --ping
    volumes:
      - letsencrypt:/etc/traefik/acme
      - /d/p/trajano.net/devops-ca-R2.crt:/ca.pem
      - /d/p/trajano.net/traefik.toml:/traefik-conf.toml
    networks:
      - traefik
      - default
      - management
    labels:
      co.elastic.logs/module: traefik
      co.elastic.logs/fileset.stdout: access
      co.elastic.logs/fileset.stderr: error
    deploy:
      # mode: global
      restart_policy:
        condition: any
        delay: 10s
      resources:
        limits:
          memory: 64M
          cpus: "1.0"
        reservations:
          memory: 16M
  daemon:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
    labels:
      - co.elastic.logs/enabled=false
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.5'
          memory: 32M
networks:
  default:
    internal: true
    attachable: false
  traefik:
    name: traefik
    internal: true
    attachable: true
  management:
    external: true
volumes:
  letsencrypt:
