# docker stack deploy -c intranet.yml --prune intranet
version: "3.7"
services:
  dmz:
    image: traefik:v2.2
    ports:
      - 55555:8080
    command:
      - --global.checknewversion=false
      - --global.sendanonymoususage=false

      - --accesslog
      # - --accesslog.fields.defaultmode=keep
      - --accesslog.fields.headers.defaultmode=keep
      - --api
      - --api.insecure
      - --ping

      - --entrypoints.http.address=:80
      - --entrypoints.http.http.middlewares=compress-all@file

      - --providers.docker.endpoint=tcp://daemon:2375
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      - --providers.docker.network=intranet
      - "--providers.docker.constraints=Label(`intranet`, `true`)"
      - '--providers.docker.defaultrule=Host(`i.trajano.net`) && PathPrefix(`/{{ .Name | trimPrefix (index .Labels "com.docker.stack.namespace") | trimPrefix "_" | trimPrefix "-" }}`)'

      - --providers.file.filename=/traefik-conf.toml

      - --tracing.zipkin.httpEndpoint=http://zipkin:9411/api/v2/spans
      - --tracing.serviceName=i-traefik
    healthcheck:
      test: traefik healthcheck --ping
    labels:
      co.elastic.logs/module: traefik
      co.elastic.logs/fileset.stdout: access
      co.elastic.logs/fileset.stderr: error
    deploy:
      update_config:
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
      resources:
        limits:
          memory: 64M
          cpus: "1.0"
        reservations:
          memory: 16M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik

        - traefik.http.routers.intranet.rule=Host(`i.trajano.net`)
        - traefik.http.routers.intranet.tls.options=intranet@file
        - traefik.http.routers.intranet.service=intranet
        - traefik.http.services.intranet.loadbalancer.server.port=80

        # - traefik.http.routers.api.rule=Host(`i.trajano.net`) && ( PathPrefix(`/traefik/api`) || PathPrefix(`/traefik/dashboard`) || PathPrefix(`/traefik/debug`))
        # - traefik.http.routers.api.entryPoints=https
        # - traefik.http.routers.api.tls.certresolver=default
        # - traefik.http.routers.api.tls.options=intranet@file
        # - traefik.http.routers.api.service=api@internal
        # - traefik.http.routers.api.middlewares=strip-prefix@file

    volumes:
      - /d/p/trajano.net/traefik.toml:/traefik-conf.toml
    networks:
      - intranet
      - traefik
      - internal
      - management
  daemon:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
    environment:
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
    labels:
      - co.elastic.logs/enabled=false
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.5'
          memory: 32M
  ping:
    image: alpine/socat
    command: tcp-listen:8080,fork,reuseaddr tcp:proxy:8080
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 32M
      labels:
        - intranet=true
        - traefik.enable=true
        - traefik.http.routers.ping.rule=Path(`/ping`)
        - traefik.http.routers.ping.service=ping
        - traefik.http.services.ping.loadbalancer.server.port=8080

        # - "traefik.http.routers.traefik.rule=(PathPrefix(`/traefik`) || PathPrefix(`/api`))"
        # - traefik.http.routers.traefik.service=api@internal
        # - traefik.http.routers.traefik.middlewares=traefik-strip
        # - traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik

        # - traefik.http.routers.api.rule=Host(`i.trajano.net`) && ( PathPrefix(`/traefik/api`) || PathPrefix(`/traefik/dashboard`) || PathPrefix(`/traefik/debug`))
        # - traefik.http.routers.api.entryPoints=https
        # - traefik.http.routers.api.tls.certresolver=default
        # - traefik.http.routers.api.tls.options=intranet@file
        # - traefik.http.routers.api.service=api@internal
        # - traefik.http.routers.api.middlewares=strip-prefix@file


    networks:
      - intranet
  whoami:
    image: containous/whoami
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 32M
      labels:
        - intranet=true
        - traefik.enable=true
        - traefik.http.routers.whoami.middlewares=strip-prefix@file
        - traefik.http.services.whoami.loadbalancer.server.port=80
    networks:
      - intranet
networks:
  traefik:
    external: true
  intranet:
    external: true
  management:
    external: true
  internal:
    internal: true
    attachable: false
